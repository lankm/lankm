Personal notes
- # think about integer size an how mathmatical operations change it. int<8>*int<8>=int<16> #

# ============================================================================ #
# ==================================== #
# ================ #
# ====== #

class fnct {
    # params #
    # operation #
}

from stdlib import stdout as out
cnst params = [ cnst argc: int, cnst argv: ptr<str>[] ];
main = [ cnst argc: int, cnst argv: ptr<str>[] ] {

    # types #
    mutl pos = [0,0,0];              # pos: int<64>[3] = [0,0,0]; #
    mutl i = 0;                      # i: int<32> = 0; #
    mutl total = 12.7;               # total: flt<64> = 12.7; #
    cnst pi = 3.14159265;            # pi: flt<64> = 3.14159265; #
    cnst twelve = 12;                # twelve: int<32> = 12; #
    mutl node = ptr(42);             # node: ptr<int<32>> = ptr(42); #
    cnst input = "Hello, world";     # input: str<utf<8>> = "Hello, world"; #
    cnst c = 'c';                    # c: utf<8> = 'c';

    if () {

    }
}

fun primitives+() {
    # character types
    utf ch = 'b';               # utf<8>[1] = ['a'];
    str<utf<8>> = "Hello world";

    # str  defaults to str<utf<8>>[1]
}

fun structures() {
    struct
    tuple
    class
    union
}

class Person {
    publ cnst str  first_name;
    publ vari str  last_name;
    priv cnst str  ssn;
    publ cnst chr  middle_initial;
    publ vari bit  is_alive;
    publ cnst int  time_of_birth

    publ init(fname: string, lname: string) {
        this.first_name = "John";
        this.last_name = "Smith";
    }

    publ fnct marry(cnst str  new_last_name) {
        this.last_name = new_last_name;
    }
    publ pure get_age(cnst int  current_time): int {
        return current_time - this.time_of_birth;
    }
}

fun control(): int {
    int<32> result;
    
    # if else
    if(a == b) {
        result = 1;
    } else if(a < b) {
        result = 2;
    } else {
        result = 3;
    }

    # match
    match(result) {
        case(a < b) {
            result = 1;
        }
        case(a == b) {
            result = 2;
        }
        case(a > b) {
            result = 3;
        }
    }

    # while loop
    while(result < 20) {
        result += 1;
    }

    # do while loop
    while({
        result += 1;
        result < 20
    })

    result
}

fun main(string<char>[]): int {
    
}
